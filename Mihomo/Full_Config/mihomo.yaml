#==========================================
# 配置名称: Mihomo 通用配置 (Icon版)
# 配置作者: @reddishJade
# 更新日期: 2025/02/11
#==========================================

#========= 锚点定义 ==========#
provider:     &pr {type: http, interval: 43200, health-check: {enable: true, url: "https://cp.cloudflare.com", interval: 300}}
proxy:        &p  {type: select, proxies: [Select, Direct, HongKong, TaiWan, Japan, Singapore, USA]}
use:          &u  {type: select, include-all-providers: true}
region:       &r  {type: select, include-all-providers: true, exclude-filter: "(?i)下载|低倍率"}
domain:       &d  {type: http, behavior: domain, interval: 43200}
ipcidr:       &i  {type: http, behavior: ipcidr, interval: 43200}
classical:    &c  {type: http, behavior: classical, interval: 43200}
proxy_select: &ps {type: select, proxies: [Proxy, Select]}
direct_proxy: &dp {type: select, proxies: [Direct, Proxy]}

# ======= 订阅配置 =======
proxy-providers:
  # 订阅链接一
  provider1:
    <<: *pr
    url: ""                               # 必选：填入机场订阅链接
    # filter: "(?i)港|hk|hongkong"        # 可选：使用关键词或正则表达式筛选节点
    # exclude-filter: "(?i)测试"          # 可选：排除匹配的节点
    # override: {
    #   additional-prefix: "[provider1]"  # 可选：为节点名添加前缀
    # }
    path: ./proxies/provider1.yaml        # 可选：填入节点文件保存路径
  # 订阅链接二
  # provider2: {
  #   <<: *pr,
  #   url: "",
  #   path: ./proxies/provider2.yaml
  # }

  # 默认在分组内使用全部订阅：
  # include-all-providers: true
  # 如有特殊需求可以在分组内使用指定订阅：
  # use:
  #   - provider1
  #   - provider2
  # 或在锚点处修改：
  # use:  &u {type: select,   use: [Provider1, Provider2] }

# ======= 基础设置 =======
ipv6: true                        # IPV6 开关
allow-lan: true                   # 允许局域网连接
mixed-port: 7890                  # 混合端口

# ======= 外部控制 =======
external-ui: ui                     # UI 路径
external-ui-name: xd                # UI 下载目录
external-controller: 127.0.0.1:9090 # 外部控制器监听地址
external-ui-url: "https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip" # UI 下载地址

# ======= 连接优化 =======
unified-delay: true               # 统一延迟显示
tcp-concurrent: true              # TCP 并发
keep-alive-idle: 600              # TCP Keep Alive 空闲时间
keep-alive-interval: 30           # TCP Keep Alive 间隔时间
find-process-mode: strict         # 进程匹配模式
global-client-fingerprint: chrome # 全局客户端指纹

# ======= 缓存配置 =======
profile:
  store-selected: true # 缓存策略组选择
  # store-fake-ip: true # 缓存 Fake-IP 映射

# ======= DNS 设置 =======
dns:
  enable: true    # 启用 DNS 服务
  ipv6: true      # IPv6 解析开关
  listen: :53     # DNS 监听地址
  prefer-h3: true # 优先使用 HTTP/3 DNS
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  fake-ip-filter: 
    - "rule-set:fakeip-filter"
    - "rule-set:private"
    - "rule-set:domestic"
  nameserver:     # 默认域名解析服务器
    - https://doh.pub/dns-query
    - https://dns.alidns.com/dns-query

# ======= 域名嗅探 =======
sniffer:
  enable: true  # 启用域名嗅探
  sniff:        # 嗅探规则
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  skip-domain:  # 跳过嗅探的域名
    - "dlg.io.mi.com"
    - "+.push.apple.com"

# ======= TUN 配置 =======
tun:
  enable: true                # 启用 TUN 模式
  stack: mixed                # 协议栈模式
  dns-hijack:                 # DNS 劫持
    - any:53
    - tcp://any:53
  auto-route: true            # 自动设置全局路由
  auto-redirect: true         # 自动重定向流量
  auto-detect-interface: true # 自动选择出口网卡

# ======= 代理配置 =======
proxies:
  - {name: Direct, type: direct, udp: true}

# ======= 代理组配置 =======
proxy-groups:
  - {name: Proxy,      <<: *p,  icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Proxy.png}
  - {name: Select,     <<: *u,  icon: https://fastly.jsdelivr.net/gh/shindgewongxj/WHATSINStash@master/icon/select.png}
  - {name: Final,      <<: *ps, icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Final.png}
  - {name: Apple,      <<: *dp, icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Apple.png}
  - {name: Microsoft,  <<: *dp, icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Microsoft.png}
  - {name: AIGC,       <<: *ps, icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/AI.png}
  - {name: Game,       <<: *dp, icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Game.png}
  - {name: Streaming,  <<: *ps, icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/YouTube.png}
  - {name: Telegram,   <<: *ps, icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Telegram.png}
  - {name: CDN,        type: select, proxies: [Proxy, Download], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Speedtest.png}
  - {name: Download,   <<: *u,  filter: "(?i)下载|低倍率", icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Download.png}
  - {name: Global,     <<: *ps, icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Global.png}
  - {name: Domestic,   <<: *dp, icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Domestic.png}
  - {name: Private,    <<: *dp, icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Lock.png}
  
  - {name: HongKong,   <<: *r,  filter: "(?i)港|hk|Hong Kong",      icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Hong_Kong.png}
  - {name: TaiWan,     <<: *r,  filter: "(?i)台|tw|Taiwan",         icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Taiwan.png}
  - {name: Japan,      <<: *r,  filter: "(?i)日|jp|Japan",          icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Japan.png}
  - {name: Singapore,  <<: *r,  filter: "(?i)新|狮|sg|Singapore",   icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Singapore.png}
  - {name: USA,        <<: *r,  filter: "(?i)美|us|United States",  icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/United_States.png}

# ======= 规则集合配置 =======
rule-providers:
  # Domain 规则
  ai:            {<<: *d, url: https://cdn.jsdelivr.net/gh/reddishJade/private_proxy@refs/heads/main/Mihomo/Provider/ai.yaml,               path: ./rules/ai.yaml}
  apple@cn:      {<<: *d, url: https://cdn.jsdelivr.net/gh/reddishJade/private_proxy@refs/heads/main/Mihomo/Provider/apple@cn.yaml,         path: ./rules/apple@cn.yaml}
  cdn:           {<<: *d, url: https://cdn.jsdelivr.net/gh/reddishJade/private_proxy@refs/heads/main/Mihomo/Provider/cdn.yaml,              path: ./rules/cdn.yaml}
  domestic:      {<<: *d, url: https://cdn.jsdelivr.net/gh/reddishJade/private_proxy@refs/heads/main/Mihomo/Provider/domestic.yaml,         path: ./rules/domestic.yaml}
  download:      {<<: *d, url: https://cdn.jsdelivr.net/gh/reddishJade/private_proxy@refs/heads/main/Mihomo/Provider/download.yaml,         path: ./rules/download.yaml}
  game@cn:       {<<: *d, url: https://cdn.jsdelivr.net/gh/reddishJade/private_proxy@refs/heads/main/Mihomo/Provider/game@cn.yaml,          path: ./rules/game@cn.yaml}
  microsoft@cn:  {<<: *d, url: https://cdn.jsdelivr.net/gh/reddishJade/private_proxy@refs/heads/main/Mihomo/Provider/microsoft@cn.yaml,     path: ./rules/microsoft@cn.yaml}
  private:       {<<: *d, url: https://cdn.jsdelivr.net/gh/reddishJade/private_proxy@refs/heads/main/Mihomo/Provider/private.yaml,          path: ./rules/private.yaml}
  proxy:         {<<: *d, url: https://cdn.jsdelivr.net/gh/reddishJade/private_proxy@refs/heads/main/Mihomo/Provider/proxy.yaml,            path: ./rules/proxy.yaml}
  reject:        {<<: *d, url: https://cdn.jsdelivr.net/gh/reddishJade/private_proxy@refs/heads/main/Mihomo/Provider/reject.yaml,           path: ./rules/reject.yaml}
  telegram:      {<<: *d, url: https://cdn.jsdelivr.net/gh/reddishJade/private_proxy@refs/heads/main/Mihomo/Provider/telegram.yaml,         path: ./rules/telegram.yaml}
  
  # IP 规则
  cdn@ip:        {<<: *i, url: https://cdn.jsdelivr.net/gh/reddishJade/private_proxy@refs/heads/main/Mihomo/Provider/cdn@ip.yaml,           path: ./rules/cdn@ip.yaml}
  domestic@ip:   {<<: *i, url: https://cdn.jsdelivr.net/gh/reddishJade/private_proxy@refs/heads/main/Mihomo/Provider/domestic@ip.yaml,      path: ./rules/domestic@ip.yaml}
  download@ip:   {<<: *i, url: https://cdn.jsdelivr.net/gh/reddishJade/private_proxy@refs/heads/main/Mihomo/Provider/download@ip.yaml,      path: ./rules/download@ip.yaml}
  private@ip:    {<<: *i, url: https://cdn.jsdelivr.net/gh/reddishJade/private_proxy@refs/heads/main/Mihomo/Provider/private@ip.yaml,       path: ./rules/private@ip.yaml}
  reject@ip:     {<<: *i, url: https://cdn.jsdelivr.net/gh/reddishJade/private_proxy@refs/heads/main/Mihomo/Provider/reject@ip.yaml,        path: ./rules/reject@ip.yaml}
  stream@ip:     {<<: *i, url: https://cdn.jsdelivr.net/gh/reddishJade/private_proxy@refs/heads/main/Mihomo/Provider/stream@ip.yaml,        path: ./rules/stream@ip.yaml}
  telegram@ip:   {<<: *i, url: https://cdn.jsdelivr.net/gh/reddishJade/private_proxy@refs/heads/main/Mihomo/Provider/telegram@ip.yaml,      path: ./rules/telegram@ip.yaml}
  
  # Classical 规则（包含 process-name）
  direct:        {<<: *c, url: https://cdn.jsdelivr.net/gh/reddishJade/private_proxy@refs/heads/main/Mihomo/Provider/direct.yaml,           path: ./rules/direct.yaml}
  stream:        {<<: *c, url: https://cdn.jsdelivr.net/gh/reddishJade/private_proxy@refs/heads/main/Mihomo/Provider/stream.yaml,           path: ./rules/stream.yaml}
  
  # 特殊规则
  fakeip-filter: {<<: *d, url: https://cdn.jsdelivr.net/gh/reddishJade/private_proxy@refs/heads/main/Mihomo/Provider/fakeip-filter.yaml,    path: ./rules/fakeip-filter.yaml}

# ======= 分流规则 =======
rules:
  - RULE-SET,reject,REJECT
  - RULE-SET,cdn,CDN
  - RULE-SET,stream,Streaming
  - RULE-SET,ai,AIGC
  - RULE-SET,telegram,Telegram
  - RULE-SET,apple@cn,Apple
  - RULE-SET,microsoft@cn,Microsoft
  - RULE-SET,game@cn,Game
  - RULE-SET,download,Download
  - RULE-SET,private,Private
  - RULE-SET,domestic,Domestic
  - RULE-SET,direct,Direct
  - RULE-SET,proxy,Global
  # IP规则
  - RULE-SET,reject@ip,REJECT
  - RULE-SET,cdn@ip,CDN
  - RULE-SET,stream@ip,Streaming
  - RULE-SET,telegram@ip,Telegram
  - RULE-SET,download@ip,Download
  - RULE-SET,private@ip,Private
  - RULE-SET,domestic@ip,Domestic
  # 漏网之鱼
  - MATCH,Final
