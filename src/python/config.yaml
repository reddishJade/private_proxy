- path: output/reject.yaml
  format: yaml
  behavior: classical
  upstream:
    # skk_reject-no-drop:
    #   type: http
    #   url: "https://ruleset.skk.moe/Clash/non_ip/reject-no-drop.txt"
    #   format: txt
    #   behavior: domain

    # skk_reject-drop:
    #   type: http
    #   url: "https://ruleset.skk.moe/Clash/non_ip/reject-drop.txt"
    #   format: txt
    #   behavior: domain

    # skk_reject_nop_ip:
    #   type: http
    #   url: "https://ruleset.skk.moe/Clash/non_ip/reject.txt"
    #   format: txt
    #   behavior: domain

    # skk_reject_domain:
    #   type: http
    #   url: "https://ruleset.skk.moe/Clash/domainset/reject.txt"
    #   format: txt
    #   behavior: domain

    # xndeye_reject:
    #   type: http
    #   url: "https://cdn.jsdelivr.net/gh/xndeye/adblock_list@beta/rule/clash.yaml"
    #   format: yaml
    #   behavior: domain
    dler_ad:
      type: http
      url: "https://cdn.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/AdBlock.yaml"
      format: yaml
      behavior: classical

    AWAvenue:
      type: http
      url: "https://gcore.jsdelivr.net/gh/TG-Twilight/AWAvenue-Ads-Rule@main/Filters/AWAvenue-Ads-Rule-Clash.yaml"
      format: yaml
      behavior: domain

    # d3ward:
    #   type: http
    #   url: "https://cdn.jsdelivr.net/gh/reddishJade/private_proxy@refs/heads/main/src/ads.txt"
    #   format: txt
    #   behavior: domain

- path: output/reject@ip.yaml
  format: yaml
  behavior: classical
  upstream:
    skk_reject_ip:
      type: http
      url: "https://ruleset.skk.moe/Clash/ip/reject.txt"
      format: txt
      behavior: ipcidr

- path: output/direct.yaml
  format: yaml
  behavior: classical
  upstream:
    # Loyalsoldier_applications:
    #   type: http
    #   url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@refs/heads/release/applications.txt"
    #   format: yaml
    #   behavior: classical
    
    skk_direct:
      type: http
      url: "https://ruleset.skk.moe/Clash/non_ip/direct.txt"
      format: txt
      behavior: classical

    dler_scholar:
      type: http
      url: "https://cdn.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Scholar.yaml"
      format: yaml
      behavior: domain

    # dler_special:
    #   type: http
    #   url: "https://raw.githubusercontent.com/dler-io/Rules/refs/heads/main/Clash/Provider/Special.yaml"
    #   format: yaml
    #   behavior: classical

- path: output/apple@cn.yaml
  format: yaml
  behavior: classical
  upstream:
    # DustinWin_apple_cn:
    #   type: http
    #   url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/apple-cn.yaml"
    #   format: yaml
    #   behavior: domain

    skk_apple_services:
      type: http
      url: "https://ruleset.skk.moe/Clash/non_ip/apple_services.txt"
      format: txt
      behavior: classical

    skk_apple_cn:
      type: http
      url: "https://ruleset.skk.moe/Clash/non_ip/apple_cn.txt"
      format: txt
      behavior: domain

    skk_apple_cdn:
      type: http
      url: "https://ruleset.skk.moe/Clash/domainset/apple_cdn.txt"
      format: txt
      behavior: domain

    skk_apple_cdn_non_ip:
      type: http
      url: "https://ruleset.skk.moe/Clash/non_ip/apple_cdn.txt"
      format: txt
      behavior: domain

- path: output/microsoft@cn.yaml
  format: yaml
  behavior: classical
  upstream:
    DustinWin_microsoft_cn:
      type: http
      url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/microsoft-cn.yaml"
      format: yaml
      behavior: domain

    # skk_microsoft_cdn:
    #   type: http
    #   url: "https://ruleset.skk.moe/Clash/non_ip/microsoft_cdn.txt"
    #   format: txt
    #   behavior: classical

- path: output/ai.yaml
  format: yaml
  behavior: classical
  upstream:
    # skk_ai:
    #   type: http
    #   url: "https://ruleset.skk.moe/Clash/non_ip/ai.txt"
    #   format: txt
    #   behavior: classical

    dler_ai:
      type: http
      url: "https://cdn.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/AI%20Suite.yaml"
      format: yaml
      behavior: classical

- path: output/game@cn.yaml
  format: yaml
  behavior: classical
  upstream:
    DustinWin_games_cn:
      type: http
      url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/games-cn.yaml"
      format: yaml
      behavior: domain

- path: output/cdn.yaml
  format: yaml
  behavior: classical
  upstream:
    skk_cdn_domainset:
      type: http
      url: "https://ruleset.skk.moe/Clash/domainset/cdn.txt"
      format: txt
      behavior: domain

    skk_cdn_non_ip:
      type: http
      url: "https://ruleset.skk.moe/Clash/non_ip/cdn.txt"
      format: txt
      behavior: classical

- path: output/cdn@ip.yaml
  format: yaml
  behavior: classical
  upstream:
    skk_cdn_ip:
      type: http
      url: "https://ruleset.skk.moe/Clash/ip/cdn.txt"
      format: txt
      behavior: ipcidr

- path: output/download.yaml
  format: yaml
  behavior: classical
  upstream:
    skk_download_domainset:
      type: http
      url: "https://ruleset.skk.moe/Clash/domainset/download.txt"
      format: txt
      behavior: domain

    skk_download_non_ip:
      type: http
      url: "https://ruleset.skk.moe/Clash/non_ip/download.txt"
      format: txt
      behavior: classical

    # ios_download:
    #   type: http
    #   url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Download/Download.yaml"
    #   format: yaml
    #   behavior: classical
    
- path: output/download@ip.yaml
  format: yaml
  behavior: classical
  upstream:
    skk_download_ip:
      type: http
      url: "https://ruleset.skk.moe/Clash/ip/download.txt"
      format: txt
      behavior: ipcidr
    
- path: output/stream.yaml
  format: yaml
  behavior: classical
  upstream:
    skk_stream:
      type: http
      url: "https://ruleset.skk.moe/Clash/non_ip/stream.txt"
      format: txt
      behavior: classical

    # bilibili_hmt:
    #   type: http
    #   url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/BilibiliHMT.list"
    #   format: txt
    #   behavior: domain
    
- path: output/stream@ip.yaml
  format: yaml
  behavior: classical
  upstream:
    skk_stream_ip:
      type: http
      url: "https://ruleset.skk.moe/Clash/ip/stream.txt"
      format: txt
      behavior: ipcidr

    # bilibili_hmt:
    #   type: http
    #   url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/BilibiliHMT.list"
    #   format: txt
    #   behavior: ipcidr
    
- path: output/telegram.yaml
  format: yaml
  behavior: classical
  upstream:
    skk_telegram:
      type: http
      url: "https://ruleset.skk.moe/Clash/non_ip/telegram.txt"
      format: txt
      behavior: classical
        
- path: output/telegram@ip.yaml
  format: yaml
  behavior: classical
  upstream:
    skk_telegram_ip:
      type: http
      url: "https://ruleset.skk.moe/Clash/ip/telegram.txt"
      format: txt
      behavior: ipcidr
          
- path: output/proxy.yaml
  format: yaml
  behavior: classical
  upstream:
    # DustinWin_proxy:
    #   type: http
    #   url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/proxy.yaml"
    #   format: yaml
    #   behavior: domain

    skk_global:
      type: http
      url: "https://ruleset.skk.moe/Clash/non_ip/global.txt"
      format: txt
      behavior: classical

    dler_proxy:
      type: http
      url: "https://cdn.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Proxy.yaml"
      format: yaml
      behavior: domain

# - path: output/proxy@ip.yaml
#   format: yaml
#   behavior: classical
#   upstream:
#     skk_stream_ip:
#       type: http
#       url: "https://ruleset.skk.moe/Clash/ip/stream.txt"
#       format: txt
#       behavior: classical

#     skk_telegram_ip:
#       type: http
#       url: "https://ruleset.skk.moe/Clash/ip/telegram.txt"
#       format: txt
#       behavior: classical

- path: output/domestic.yaml
  format: yaml
  behavior: classical
  upstream:
    # DustinWin_domestic:
    #   type: http
    #   url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/cn.yaml"
    #   format: yaml
    #   behavior: domain

    skk_domestic:
      type: http
      url: "https://ruleset.skk.moe/Clash/non_ip/domestic.txt"
      format: txt
      behavior: classical

    dler_dom_ip:
      type: http
      url: "https://cdn.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Domestic.yaml"
      format: yaml
      behavior: domain

- path: output/domestic@ip.yaml
  format: yaml
  behavior: classical
  upstream:    
    # DustinWin_domestic_ip:
    #   type: http
    #   url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/cnip.yaml"
    #   format: yaml
    #   behavior: ipcidr

    skk_domestic_ip:
      type: http
      url: "https://ruleset.skk.moe/Clash/ip/domestic.txt"
      format: txt
      behavior: ipcidr

    skk_china_ip:
      type: http
      url: "https://ruleset.skk.moe/Clash/ip/china_ip.txt"
      format: txt
      behavior: ipcidr

    dler_dom_ip:
      type: http
      url: "https://cdn.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Domestic%20IPs.yaml"
      format: yaml
      behavior: ipcidr

- path: output/private.yaml
  format: yaml
  behavior: classical
  upstream:
    DustinWin_private:
      type: http
      url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/private.yaml"
      format: yaml
      behavior: domain

- path: output/private@ip.yaml
  format: yaml
  behavior: classical
  upstream:
    DustinWin_privateip:
      type: http
      url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/privateip.yaml"
      format: yaml
      behavior: ipcidr

- path: output/fakeip-filter.yaml
  format: yaml
  behavior: classical
  upstream:
    fakeip-filter:
      type: http
      url: "https://cdn.jsdelivr.net/gh/juewuy/ShellCrash@refs/heads/dev/public/fake_ip_filter.list"
      format: txt
      behavior: domain
