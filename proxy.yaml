# 基本配置
# 订阅更新以及延迟测试
p:
  type: http
  interval: 3600
  health-check:
    enable: true
    url: https://www.gstatic.com/generate_204
    interval: 300

# 代理商提供配置
proxy-providers:
  provider:
    type: http
    interval: 3600
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    url: https://967go.no-mad-world.club/link/cNIKJy4BAuYFBRA0?clash=3&extend=1

# 网络设置
ipv6: true
allow-lan: true
mixed-port: 7890
unified-delay: false
tcp-concurrent: true

# 外部控制器和UI
external-controller: 127.0.0.1:9090
external-ui: ui
external-ui-url: https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip

# 其他配置
find-process-mode: strict
global-client-fingerprint: chrome

profile:
  store-selected: true
  store-fake-ip: true

sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, "8080-8880"]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  skip-domain: ["Mijia Cloud"]

tun:
  enable: true
  stack: mixed
  dns-hijack: ["any:53"]
  auto-route: true
  auto-detect-interface: true

dns:
  enable: true
  listen: ":1053"
  ipv6: true
  enhanced-mode: fake-ip
  fake-ip-range: "28.0.0.1/8"
  fake-ip-filter: ["*", "+.lan", "+.local"]
  default-nameserver: ["223.5.5.5"]
  nameserver: ["https://doh.pub/dns-query", "https://dns.alidns.com/dns-query"]
  proxy-server-nameserver: ["https://doh.pub/dns-query"]
  nameserver-policy:
    rule-set:cn_domain,private:
      ["https://doh.pub/dns-query", "https://dns.alidns.com/dns-query"]
    rule-set:geolocation-!cn:
      [
        "https://dns.cloudflare.com/dns-query#dns",
        "https://dns.google/dns-query#dns",
      ]

# 代理
proxies:
  - name: Direct
    type: direct
    udp: true

# 代理组
proxy-groups:
  - {
      name: Proxy,
      type: select,
      proxies:
        [
          自动选择,
          DIRECT,
          香港节点,
          台湾节点,
          日本节点,
          新加坡节点,
          美国节点,
          其它地区,
          手动选择,
        ],
      icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Rocket.png,
    }

  - {
      name: 手动选择,
      type: select,
      include-all-providers: true,
      icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Domestic.png,
    }

  - {
      name: 自动选择,
      type: url-test,
      include-all-providers: true,
      tolerance: 10,
      icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Auto.png,
    }

  - {
      name: Telegram,
      type: select,
      proxies: [手动选择, DIRECT],
      icon: https://clash-verge-rev.github.io/assets/icons/telegram.svg,
    }

  - {
      name: 漏网之鱼,
      type: select,
      proxies: [Proxy, DIRECT],
      icon: https://clash-verge-rev.github.io/assets/icons/fish.svg,
    }

  #地区分组
  - {
      name: 香港节点,
      type: url-test,
      include-all-providers: true,
      filter: "(?i)港|hk|hongkong|hong kong",
      icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Hong_Kong.png,
    }
  - {
      name: 台湾节点,
      type: url-test,
      include-all-providers: true,
      filter: "(?i)台|tw|taiwan",
      icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Taiwan.png,
    }
  - {
      name: 日本节点,
      type: url-test,
      include-all-providers: true,
      filter: "(?i)日|jp|japan",
      icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Japan.png,
    }
  - {
      name: 新加坡节点,
      type: url-test,
      include-all-providers: true,
      filter: "(?i)(新|sg|singapore)",
      icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Singapore.png,
    }
  - {
      name: 美国节点,
      type: url-test,
      include-all-providers: true,
      filter: "(?i)美|us|unitedstates|united states",
      icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/United_States.png,
    }
  - {
      name: 其它地区,
      type: select,
      include-all-providers: true,
      filter: "(?i)^(?!.*(?:🇭🇰|🇯🇵|🇺🇸|🇸🇬|🇨🇳|港|hk|hongkong|台|tw|taiwan|日|jp|japan|新|sg|singapore|美|us|unitedstates)).*",
      icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Global.png,
    }

rule-anchor:
  ip: &ip { type: http, interval: 86400, behavior: ipcidr, format: yaml }
  domain:
    &domain { type: http, interval: 86400, behavior: domain, format: yaml }

# 规则源
rule-providers:
  Direct:
    {
      type: http,
      behavior: classical,
      url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Direct/Direct.yaml",
      path: ./ruleset/Direct.yaml,
      interval: 86400,
    }
  AD:
    type: http
    behavior: domain
    url: "https://raw.githubusercontent.com/earoftoast/clash-rules/main/AD.yaml"
    path: ./rules/AD.yaml
    interval: 86400

  EasyList:
    type: http
    behavior: domain
    url: "https://raw.githubusercontent.com/earoftoast/clash-rules/main/EasyList.yaml"
    path: ./rules/EasyList.yaml
    interval: 86400

  EasyListChina:
    type: http
    behavior: domain
    url: "https://raw.githubusercontent.com/earoftoast/clash-rules/main/EasyListChina.yaml"
    path: ./rules/EasyListChina.yaml
    interval: 86400

  EasyPrivacy:
    type: http
    behavior: domain
    url: "https://raw.githubusercontent.com/earoftoast/clash-rules/main/EasyPrivacy.yaml"
    path: ./rules/EasyPrivacy.yaml
    interval: 86400

  ProgramAD:
    type: http
    behavior: domain
    url: "https://raw.githubusercontent.com/earoftoast/clash-rules/main/ProgramAD.yaml"
    path: ./rules/ProgramAD.yaml
    interval: 86400

  private:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.yaml"

  cn_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.yaml"

  geolocation-!cn:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.yaml"

  Apple:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Apple/Apple.yaml"
    path: ./rules/Apple.yaml
    interval: 86400

  Bahamut:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Bahamut/Bahamut.yaml"
    path: ./rules/Bahamut.yaml
    interval: 86400

  China:
    type: http
    behavior: domain
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ChinaMaxNoMedia/ChinaMaxNoMedia_Classical.yaml"
    path: ./rules/China.yaml
    interval: 86400

  ChinaMedia:
    type: http
    behavior: domain
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ChinaMedia/ChinaMedia.yaml"
    path: ./rules/ChinaMedia.yaml
    interval: 86400

  Claude:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Claude/Claude.yaml"
    path: ./rules/Claude.yaml
    interval: 86400

  Emby:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Emby/Emby.yaml"
    path: ./rules/Emby.yaml
    interval: 86400

  Game:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Game/Game.yaml"
    path: ./rules/Game.yaml
    interval: 86400

  Gemini:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Gemini/Gemini.yaml"
    path: ./rules/Gemini.yaml
    interval: 86400

  GitHub:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GitHub/GitHub.yaml"
    path: ./rules/GitHub.yaml
    interval: 86400

  GlobalMedia:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GlobalMedia/GlobalMedia_Classical.yaml"
    path: ./rules/GlobalMedia.yaml
    interval: 86400

  Google:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Google/Google.yaml"
    path: ./rules/Google.yaml
    interval: 86400

  GoogleFCM:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GoogleFCM/GoogleFCM.yaml"
    path: ./rules/GoogleFCM.yaml
    interval: 86400

  Microsoft:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Microsoft/Microsoft.yaml"
    path: ./rules/Microsoft.yaml
    interval: 86400

  OpenAI:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/OpenAI/OpenAI.yaml"
    path: ./rules/OpenAI.yaml
    interval: 86400

  ProxyLite:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ProxyLite/ProxyLite.yaml"
    path: ./rules/ProxyLite.yaml
    interval: 86400

  Samsung:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Samsung/Samsung.yaml"
    path: ./rules/Samsung.yaml
    interval: 86400

  Spotify:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Spotify/Spotify.yaml"
    path: ./rules/Spotify.yaml
    interval: 86400

  Telegram:
    {
      type: http,
      behavior: classical,
      url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Telegram/Telegram.yaml",
      path: ./ruleset/telegram.yaml,
      interval: 86400,
    }

  TikTok:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/TikTok/TikTok.yaml"
    path: ./rules/TikTok.yaml
    interval: 86400

  Twitch:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Twitch/Twitch.yaml"
    path: ./rules/Twitch.yaml
    interval: 86400

  YouTube:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/YouTube/YouTube.yaml"
    path: ./rules/YouTube.yaml
    interval: 86400

  秋风广告规则:
    type: http
    behavior: domain
    format: yaml
    path: ./rules/AWAvenue-Ads-Rule-Clash.yaml
    #此处“/rule_providers”自行参考
    url: "https://raw.githubusercontent.com/TG-Twilight/AWAvenue-Ads-Rule/main//Filters/AWAvenue-Ads-Rule-Clash.yaml"
    interval: 60480

# 规则
rules:
  - RULE-SET,Direct,DIRECT
  - RULE-SET,AD,REJECT
  - RULE-SET,EasyList,REJECT
  - RULE-SET,EasyListChina,REJECT
  - RULE-SET,EasyPrivacy,REJECT
  - RULE-SET,ProgramAD,REJECT
  - RULE-SET,Apple,Proxy
  - RULE-SET,Bahamut,Proxy
  - RULE-SET,China,DIRECT
  - RULE-SET,ChinaMedia,DIRECT
  - RULE-SET,Claude,Proxy
  - RULE-SET,Emby,Proxy
  - RULE-SET,Game,Proxy
  - RULE-SET,Gemini,Proxy
  - RULE-SET,GitHub,Proxy
  - RULE-SET,GlobalMedia,Proxy
  - RULE-SET,Google,Proxy
  - RULE-SET,GoogleFCM,Proxy
  - RULE-SET,Microsoft,Proxy
  - RULE-SET,OpenAI,Proxy
  - RULE-SET,ProxyLite,Proxy
  - RULE-SET,Samsung,DIRECT
  - RULE-SET,Spotify,Proxy
  - RULE-SET,Telegram,Telegram
  - RULE-SET,TikTok,Proxy
  - RULE-SET,Twitch,Proxy
  - RULE-SET,YouTube,Proxy
  - RULE-SET,private,DIRECT
  - RULE-SET,cn_domain,DIRECT
  - RULE-SET,geolocation-!cn,Proxy
  - RULE-SET,秋风广告规则,REJECT
  - MATCH,漏网之鱼
